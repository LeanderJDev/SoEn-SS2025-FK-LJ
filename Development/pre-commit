#!/bin/sh
#
# An example hook script to verify what is about to be committed.
# Called by "git commit" with no arguments.  The hook should
# exit with non-zero status after issuing an appropriate message if
# it wants to stop the commit.
#
# To enable this hook, rename this file to "pre-commit".

if git rev-parse --verify HEAD >/dev/null 2>&1; then
    against=HEAD
else
    # Initial commit: diff against an empty tree object
    against=$(git hash-object -t tree /dev/null)
fi

# If you want to allow non-ASCII filenames set this variable to true.
allownonascii=$(git config --type=bool hooks.allownonascii)

# Redirect output to stderr.
exec 1>&2

# Cross platform projects tend to avoid non-ASCII filenames; prevent
# them from being added to the repository. We exploit the fact that the
# printable range starts at the space character and ends with tilde.
if [ "$allownonascii" != "true" ] && \
    # Note that the use of brackets around a tr range is ok here, (it's
    # even required, for portability to Solaris 10's /usr/bin/tr), since
    # the square bracket bytes happen to fall in the designated range.
    test $(git diff-index --cached --name-only --diff-filter=A -z $against | \
        LC_ALL=C tr -d '[ -~]\0' | wc -c) != 0
then
    cat <<\EOF
Error: Attempt to add a non-ASCII file name.

This can cause problems if you want to work with people on other platforms.

To be portable it is advisable to rename the file.

If you know what you are doing you can disable this check using:

    git config hooks.allownonascii true
EOF

    exit 1
fi

# Ungestagete Änderungen stashen (nur Working Directory, staged bleibt erhalten)
if ! git diff --quiet; then
    STASH_RESULT=$(git stash push --keep-index --include-untracked -m "pre-commit-format-stash")
    if echo "$STASH_RESULT" | grep -q "No local changes to save"; then
    STASHED=1
    else
        STASHED=0
    fi
else
    STASHED=1
fi

dotnet format musik-spieler/Musik-Spieler.sln --include musik-spieler/scripts/**
if [ $? -ne 0 ]; then
    echo "dotnet format hat einen Fehler zurückgegeben."
    echo "Vielleicht ist es nicht installiert."
    echo "Commit abgebrochen."
    echo "Installieren mit:"
    echo "dotnet tool install -g dotnet-format"
    # Stash ggf. zurückholen
    if [ $STASHED -eq 0 ]; then git stash pop -q; fi
    exit 1
fi

find musik-spieler/scripts/ -name '*.cs' -exec sed -i 's/[ \t]*$//' {} +
git add -u

# Ungestagete Änderungen zurückholen
if [ $STASHED -eq 0 ]; then git stash pop -q; fi

